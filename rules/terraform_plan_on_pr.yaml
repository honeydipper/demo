---
rules:
  - when:
      source:
        system: github
        trigger: pullrequest
      conditions:
        json:
          repository:
            full_name: honeydipper/infrastructure-demo
    do:
      content: pipe
      data:
        on_error: exit
        "*steps":
          - name: check if terraform files changed
            work:
              content: git_fetch_PR_contains
              data:
                patterns:
                  - "^terraform\\/"
          - name: comment with instructions
            work:
              type: function
              content:
                target:
                  system: '{{ default "github" .wfdata.git_system }}'
                  function: createComment
              data:
                message: |-
                  <img src='https://placehold.it/30x10/3933ff/000000?text=+'></img> The PR contains terraform changes, below commands are supported in comments.
                   * `/honeydipper tf plan`  -- Create a plan and lock the project with a configurable timeout
                   * `/honeydipper tf apply` -- Apply the plan, requires the lock from previous plan
                   * `/honeydipper tf unlock` -- Unlock the project locked from previous plan

  - when:
      source:
        system: github
        trigger: pr_commented
      conditions:
        json:
          repository:
            full_name: honeydipper/infrastructure-demo
          comment:
            body: ":regex:^\\s*\\/honeydipper\\s+tf\\s+(plan|apply|unlock)\\s*$"
          issue:
            state: open
    do:
      content: pipe
      data:
        on_error: exit
        repo: '{{ .event.json.repository.full_name }}'
        number: '{{ .event.json.issue.pull_request.url | splitList "/" | last }}'
        "*steps":
          - name: check if terraform files changed
            work:
              content: git_fetch_PR_contains
              data:
                patterns: 
                  - "^terraform\\/"
          - name: get the info of PR
            work:
              type: function
              content:
                target:
                  system: github
                  function: api
                parameters:
                  URL: '{{ .event.json.issue.pull_request.url }}'
                  method: GET
          - name: run terraform action
            work:
              content: tf_PR_cmd_with_lock
              data:
                sha: '{{ `{{ .data.json.head.sha }}` }}'
                branch: '{{ `{{ .data.json.head.ref }}` }}'
                action: '{{ .event.json.comment.body | trim | splitList " " | last }}'
                tf_lock_timeout: '5m'
                tf_project_dir: terraform
                message_on_success_plan: |-
                  * <img src='https://placehold.it/30x10/3933ff/000000?text=+'></img> The project `{{ "{{ `{{ .wfdata.tf_project_dir }}` }}" }}` is locked for `{{ `{{ "{{ .wfdata.tf_lock_timeout }}" }}` }}`.
                  * <img src='https://placehold.it/30x10/c70039/000000?text=+'></img> Type `/honeydipper tf apply` to apply the plan before the time out.
                  * <img src='https://placehold.it/30x10/3933ff/000000?text=+'></img> Or unlock the project by typing `/honeydipper tf unlock`.
